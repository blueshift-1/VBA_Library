' String Functions
' Basic string manipulation and conversion functions

' Converts Date and Time to String
Public Function convertDate2Str(Optional ByVal datetime As String = "n/a") As String
    If datetime = "n/a" Then
        getDateTimeStr = Format(Date, "yyyy-mm-dd") & "_" & Format(Time, "hhmm") & ".xlsx"
    Else
        datetime = Replace(datetime, ":", " ")
        datetime = Replace(datetime, "/", " ")
        
        Dim dt As Variant
        dt = Split(datetime, " ")
        
        getDateTimeStr = dt(2) & "-" & len2(dt(0)) & "-" & len2(dt(1)) & "_" & militaryConv(dt(3), dt(6)) & dt(4)
    End If
End Function

' Concatenates an entire range (normal excel Concatenate only accept text values, not ranges)
' EXCEL ONLY
Public Function CellConcatenate(Rng As Range) As String
    
    Dim str As String
    For Each c In Rng.Cells
        str = str & c.Value
    Next

    CellConcatenate = str
End Function

' A funny little function that makes words past tense in english
' This is great for dealing with dynamic messages to a user.
Function pastTense(wrd As String) As String
    If Right(wrd, 1) = "e" Then
        pastTense = wrd & "d"
    Else
        pastTense = wrd & "ed"
    End If
End Function

' Creates a dictionary of stop words (Common words to be excluded from a Search)
Function getStopWords() As Object
    Dim sw As Variant
    sw = Array("a", "about", "above", "after", "again", "against", "all", "am", "an", "and", "any", "are", "aren't", "as", "at", "be", "because", "been", "before", "being", "below", "between", "" & _
                         "both", "but", "by", "can't", "cannot", "could", "couldn't", "did", "didn't", "do", "does", "doesn't", "doing", "don't", "down", "during", "each", "few", "for", "from", "further", "" & _
                         "had", "hadn't", "has", "hasn't", "have", "haven't", "having", "he", "he'd", "he'll", "he's", "her", "here", "here's", "hers", "herself", "him", "himself", "his", "how", "how's", "" & _
                         "i", "i'd", "i'll", "i'm", "i've", "if", "in", "into", "is", "isn't", "it", "it's", "its", "itself", "let's", "me", "more", "most", "mustn't", "my", "myself", "no", "nor", "not", "of", "" & _
                         "off", "on", "once", "only", "or", "other", "ought", "our", "ours", "ourselves", "out", "over", "own", "same", "shan't", "she", "she'd", "she'll", "she's", "should", "shouldn't", "" & _
                         "so", "some", "such", "than", "that", "that's", "the", "their", "theirs", "them", "themselves", "then", "there", "there's", "these", "they", "they'd", "they'll", "they're", "" & _
                         "they've", "this", "those", "through", "to", "too", "under", "until", "up", "very", "was", "wasn't", "we", "we'd", "we'll", "we're", "we've", "were", "weren't", "what", "what's", "" & _
                         "when", "when's", "where", "where's", "which", "while", "who", "who's", "whom", "why", "why's", "with", "won't", "would", "wouldn't", "you", "you'd", "you'll", "you're", "you've", "" & _
                         "your", "yours", "yourself", "yourselves")
    Dim i As Long
    Dim sw_dict As Object
    Set sw_dict = CreateObject("scripting.dictionary")
    For i = LBound(sw) To UBound(sw)
        sw_dict.Add sw(i), True
    Next i
    
    Set getStopWords = sw_dict
End Function

' This converts a string of words into a dictionary of words.
' DEPENDANCIES: Regex Functions
Public Function tokenizeString(str As String) As Object
    ' Forces lowercase and remove special characters
    str = LCase(str)
    str = getRegex(str, "[^'\w\s]")
    
    ' Splits up string by spaces
    Dim splt_str As Variant
    splt_str = Split(str, " ")
    
    Dim stop_words As Object
    Set stop_words = getStopWords()
    Dim dict As Object
    Set dict = CreateObject("scripting.dictionary")
    
    Dim i As Long
    For i = LBound(splt_str) To UBound(splt_str)
        If stop_words.exists(splt_str(i)) = False Then
            If dict.exists(splt_str(i)) = True Then
                dict.Item(splt_str(i)) = CLng(dict.Item(splt_str(i))) + 1
            Else
                dict.Add splt_str(i), 1
            End If
        End If
    Next i
    
    Set tokenizeString = dict
    
End Function
